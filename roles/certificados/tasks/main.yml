---

  - name: Adiciona as permiss√µes totais para o ansible no KUBECONFIG
    file:
      path: /etc/rancher/k3s/k3s.yaml
      state: file
      owner: root
      group: root
      mode: u=rwx,g=r,o=r
  
  #  AWS
  - name: Instala o nginx ingress controller AWS
    shell:
      cmd: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.1/deploy/static/provider/aws/deploy.yaml
      warn: false
    when: ingress_class == "nginx" and cloud == "aws"

  #  DO
  - name: Instala o nginx ingress controller DO
    shell:
      cmd: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.1/deploy/static/provider/do/deploy.yaml
      warn: false
    when: ingress_class == "nginx" and cloud == "do"
    
  #  DO
  - name: Instala o nginx ingress controller AZURE
    shell:
      cmd: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.1/deploy/static/provider/cloud/deploy.yaml
      warn: false
    when: ingress_class == "nginx" and cloud == "az"

  - name: Insere o chart do Cluster Issuer
    kubernetes.core.helm_repository:
      name: cert-manager
      repo_url: "https://charts.jetstack.io"
    environment:
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml

  - name: Adiciona o repositorio do certmanager
    shell:
      cmd: helm repo add jetstack https://charts.jetstack.io && helm repo update
      warn: false
    environment:
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml

  - name: Instala os CRDs
    shell:
      cmd: kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.10.1/cert-manager.crds.yaml
      warn: false

  - name: Instala os CRDs (gerenciador dos certs)
    kubernetes.core.helm:
      name: cert-manager
      chart_ref: jetstack/cert-manager
      create_namespace: true
      update_repo_cache: true
      chart_version: 1.10.1
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      release_namespace: cert-manager

  - name: Envia o cluster issuer para a maquina
    template:
      src: "templates/cluster_issuer_nginx.yml.j2"
      dest: "{{ diretorio_temporario }}cluster_issuer_nginx.yaml"
    
  - name: Envia o cluster issuer para a maquina
    template:
      src: "templates/cluster_issuer_traefik.yml.j2"
      dest: "{{ diretorio_temporario }}cluster_issuer_traefik.yaml"

  - name: Instala o certmanager nginx
    shell:
      cmd: kubectl apply -f cluster_issuer_nginx.yaml
      chdir: "{{ diretorio_temporario }}"
      warn: false
    when: ingress_class == "nginx"

  - name: Instala o certmanager traefik
    shell:
      cmd: kubectl apply -f cluster_issuer_traefik.yaml
      chdir: "{{ diretorio_temporario }}"
      warn: false
    when: ingress_class == "traefik"

  - name: "Cria um namespace para o sistema {{ sistema }}"
    kubernetes.core.k8s:
      name: "{{ sistema }}"
      api_version: v1
      kind: Namespace
      state: present
      kubeconfig: /etc/rancher/k3s/k3s.yaml

...
